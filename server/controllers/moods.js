// Generated by CoffeeScript 1.6.3
var Mood, moment, normalizeResults;

Mood = require('../models/mood');

moment = require('moment');

normalizeResults = require('../lib/normalizer');

module.exports.all = function(req, res, next) {
  return Mood.rawRequest('statusByDay', function(err, rows) {
    var data, date, dateEpoch, limitDate, results, value;
    if (err) {
      return next(err);
    } else {
      results = [];
      limitDate = moment(req.params.day);
      data = normalizeResults(rows, limitDate);
      for (date in data) {
        value = data[date];
        dateEpoch = new Date(date).getTime() / 1000;
        results.push({
          x: dateEpoch,
          y: value
        });
      }
      return res.send(results, 200);
    }
  });
};

module.exports.day = function(req, res, next) {
  var day;
  day = moment(req.params.day);
  day.hours(0, 0, 0, 0);
  return Mood.getMood(day, function(err, mood) {
    if (err) {
      return next(err);
    } else if (mood != null) {
      return res.send(mood);
    } else {
      return res.send({});
    }
  });
};

module.exports.updateDay = function(req, res, next) {
  var day;
  day = moment(req.params.day);
  day.hours(0, 0, 0, 0);
  return Mood.getMood(day, function(err, mood) {
    var data;
    if (err) {
      return next(err);
    } else if (mood != null) {
      mood.status = req.body.status;
      return mood.save(function(err) {
        if (err) {
          return next(err);
        } else {
          return res.send(mood);
        }
      });
    } else {
      data = {
        status: req.body.status,
        date: day
      };
      return Mood.create(data, function(err, mood) {
        if (err) {
          return next(err);
        } else {
          return res.send(mood);
        }
      });
    }
  });
};
