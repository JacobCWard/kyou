// Generated by CoffeeScript 1.6.3
var CoffeeCup, normalizeResults;

CoffeeCup = require('../models/coffeecup');

normalizeResults = require('../lib/normalizer');

module.exports.all = function(req, res, next) {
  return CoffeeCup.rawRequest('nbByDay', function(err, rows) {
    var data, date, dateEpoch, results, value;
    if (err) {
      return next(err);
    } else {
      results = [];
      data = normalizeResults(rows);
      for (date in data) {
        value = data[date];
        dateEpoch = new Date(date).getTime() / 1000;
        results.push({
          x: dateEpoch,
          y: value
        });
      }
      return res.send(results, 200);
    }
  });
};

module.exports.today = function(req, res, next) {
  return CoffeeCup.loadTodayConsumption(function(err, coffeecup) {
    if (err) {
      return next(err);
    } else if (coffeecup != null) {
      return res.send(coffeecup);
    } else {
      return res.send({});
    }
  });
};

module.exports.updateToday = function(req, res, next) {
  return CoffeeCup.loadTodayConsumption(function(err, coffeecup) {
    var data;
    if (err) {
      return next(err);
    } else if (coffeecup != null) {
      coffeecup.amount = req.body.amount;
      return coffeecup.save(function(err) {
        if (err) {
          return next(err);
        } else {
          return res.send(coffeecup);
        }
      });
    } else {
      data = {
        amount: req.body.amount,
        date: new Date
      };
      return CoffeeCup.create(data, function(err, coffeecup) {
        if (err) {
          return next(err);
        } else {
          return res.send(coffeecup);
        }
      });
    }
  });
};
